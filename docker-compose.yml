version: '3.1'

services:
  db:
    image: library/postgres:9.6.18-alpine
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: change_me
    networks:
      - my-network
    volumes:
    - ./temp:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - my-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    networks:
      - my-network
    volumes:
      - ./temp/es01:/usr/share/elasticsearch/data

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    restart: always
    ports:
      - 2181:2181
    networks:
      - my-network
  kakfa:
    image: wurstmeister/kafka:2.12-2.5.0
    container_name: kafka
    restart: always
    links:
      - zookeeper:zookeeper
    ports:
      - 9092:9092
    networks:
      - my-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CREATE_TOPICS: "moto1:1:1,moto2:1:1"
    depends_on:
      - zookeeper

networks:
  my-network: {}
